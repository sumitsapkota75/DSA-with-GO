! Heap is a data structure


*** Heap is a special case of balanced binary tree data structure where the root-node key is compared with its children and arranged accordingly.

*** Heap is basically a array/list which can be represented in tree structure

# Types of heaps
- Max Heap
- Min Heap

# Time complexity: 
O(log n) ;where n is number of nodes
or
O(h) ; where h is the height of tree


Max Heap:
    - Max heap contains the maximum value in root node
    - the value of the root node is greater than or equal to either of its children.

Max Heap Constructing Algorithm:

Step 1 − Create a new node at the end of heap.
Step 2 − Assign new value to the node.
Step 3 − Compare the value of this child node with its parent.
Step 4 − If value of parent is less than child, then swap them.
Step 5 − Repeat step 3 & 4 until Heap property holds.

Max Heap Deletion Algorithm:

Step 1 − Remove root node.
Step 2 − Move the last element of last level to root.
Step 3 − Compare the value of this child node with its parent.
Step 4 − If value of parent is less than child, then swap them.
Step 5 − Repeat step 3 & 4 until Heap property holds.